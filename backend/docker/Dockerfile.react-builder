# √âtape 1 : Builder React avec Node.js
# FROM node:16 AS builder
# # D√©finir le dossier de travail dans le conteneur
# WORKDIR /app
# # Copier tous les fichiers du projet dans le conteneur
# COPY . .
# # Installer les d√©pendances
# RUN npm install
# # Builder le projet React (sortie dans /app/build)
# RUN npm run build
# # üîç Debug : Afficher le contenu du build g√©n√©r√©
# RUN ls -la /app/build
# # √âtape 2 : Extraire le build dans un dossier partag√©
# # Cette √©tape ne sert qu'√† copier le build √† l‚Äôext√©rieur
# FROM alpine:3
# # Cr√©e un dossier temporaire pour y copier le build
# WORKDIR /output
# # Copier uniquement le dossier build depuis l'√©tape pr√©c√©dente
# COPY --from=builder /app/build ./
# # Commande par d√©faut ‚Äî ne fait rien car on utilise `docker run` pour extraire
# CMD ["echo", "Build done"]
# √âtape 1 : Builder React avec Node.js
#2eme 
# FROM node:16 AS builder
# # Cr√©er le dossier de travail dans le conteneur
# WORKDIR /app
# # Copier les fichiers du projet dans le conteneur
# COPY . .
# # Installer les d√©pendances
# RUN npm install
# # Builder le projet React
# RUN npm run build
# # √âtape 2 : Extraire uniquement le build
# FROM alpine:3
# # Cr√©er un dossier pour stocker le build final
# WORKDIR /output
# # Copier le build depuis l'√©tape pr√©c√©dente
# COPY --from=builder /app/build .
# # Commande par d√©faut
# #CMD ["echo", " React build ready in /output"]
# CMD ["sh", "-c", "echo Build copi√© dans /output"]


# # √âtape 1 : Builder React avec Node.js
# FROM node:16 AS builder

# # Argument pour recevoir le chemin vers le projet React
# ARG PROJECT_PATH

# # Dossier de travail
# WORKDIR /app

# # Copier uniquement le projet React dans le conteneur
# COPY ${PROJECT_PATH}/package.json ./
# COPY ${PROJECT_PATH}/public ./public
# COPY ${PROJECT_PATH}/src ./src

# # Installer les d√©pendances
# RUN npm install

# # Builder le projet React
# RUN npm run build

# # √âtape 2 : Extraire uniquement le build
# FROM alpine:3

# # Dossier de sortie
# WORKDIR /output

# # Copier le build depuis l'√©tape pr√©c√©dente
# COPY --from=builder /app/build /output

# # Message de confirmation
# CMD ["sh", "-c", "echo Build copi√© dans /output"]

# √âtape 1 : build React dans /app/build
FROM node:16 AS builder

ARG PROJECT_PATH
WORKDIR /app

COPY ${PROJECT_PATH}/package.json ./
COPY ${PROJECT_PATH}/public ./public
COPY ${PROJECT_PATH}/src ./src

RUN npm install
RUN npm run build

# √âtape 2 : Conteneur l√©ger avec Alpine, copie du build au runtime
FROM alpine:3

WORKDIR /output

# Copie le build depuis l'√©tape pr√©c√©dente dans /tmp/build
COPY --from=builder /app/build /tmp/build

# Copie r√©elle vers /output au moment de l'ex√©cution du conteneur
CMD cp -r /tmp/build/* /output

